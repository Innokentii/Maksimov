scores_letters = {
    1: 'АВЕИНОРСТ',
    2: 'ДКЛМПУ',
    3: 'БГЬЯ',
    4: 'ЙЫ',
    5: 'ЖЗХЦЧ',
    8: 'ФШЭЮ',
    10: 'Щ',
    15: 'Ъ'
}

word = input('введите слово: ')
points = 0
# ИСПРАВИТЬ: словарный метод keys() возвращает итерируемый объект — преобразование в list избыточно
# ИСПРАВИТЬ: при итерации по объекту словарю происходит итерация по его ключам — явный вызов метода keys() избыточен
for score in list(scores_letters.keys()):
    # ИСПРАВИТЬ: строки являются итерируемыми объектами — преобразование в list избыточно
    for ch in list(word):
        # ИСПРАВИТЬ: много лишних действий — здесь будет достаточно оператора in
        is_char_in_letters = {ch.upper()} < set(scores_letters[score])
        # ИСПРАВИТЬ: после ключевых слов if и elif интерпретатор ожидает объект bool, а не оператор сравнения — вам не нужно сравнивать объект bool с объектом True
        if is_char_in_letters == True:
            # ИСПРАВИТЬ: ключи словаря являются int объектами — преобразование в int избыточно
            points += int(score)
print(f'\n{points}\n')


# введите слово: синхрофазотрон
#
# 29

# ДОБАВИТЬ: тесты с другими входными данными, например
# введите слово:
#
# 0


# ИТОГ: нужно лучше, доработать — 1/3
